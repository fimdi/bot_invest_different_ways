const utils = require('../utils.js');
const { Keyboard } = require('vk-io');

const profile = async (context, user, pool) => {
    let investmentMethod = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
    
    if (user.investmentMethodId != null) 
    {
        let [[res]] = await pool.query('SELECT * FROM usersInvestmentMethods WHERE id = ?', [user.investmentMethodId]);
        investmentMethod = `‚Ññ ${res.number}
${res.incomeDayPercentage >= 0 ? "–î–æ—Ö–æ–¥" : "–†–∞—Å—Ö–æ–¥"} –≤ –¥–µ–Ω—å: ${Math.abs(res.incomeDayPercentage)} %
–ù–∞–ª–æ–≥ –≤ –¥–µ–Ω—å: ${res.taxDayRubles} ‚ÇΩ
–°—Ä–æ–∫ ${res.term} ${ utils.lineEnding(res.term, ["–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π"]) }
        
–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: ${res.daysLeft}`;
    }
    let id = context.senderId;
    
    context.send(
`üñ•–ü–†–û–§–ò–õ–¨
ID: ${id}
        
üí∞–ë–ê–õ–ê–ù–°
–î–ª—è –≤—ã–≤–æ–¥–∞: ${ utils.prettify(user.balanceForWithdrawal) } ‚ÇΩ
–î–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${ utils.prettify(user.balanceForInvestment) } ‚ÇΩ
        
üìë–ò–ù–í–ï–°–¢–ò–†–û–í–ê–ù–ù–û
-> ${ utils.prettify(user.invested) } ‚ÇΩ
        
‚öô–°–ü–û–°–û–ë –ò–ù–í–ï–°–¢–ò–¶–ò–ò
${ investmentMethod }

üóÑ–°–¢–ê–¢–ò–°–¢–ò–ö–ê
–í—ã–≤–µ–¥–µ–Ω–Ω–æ: ${ utils.prettify(user.withdrawn) } ‚ÇΩ
–ü–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ: ${ utils.prettify(user.replenished) } ‚ÇΩ
–£–∫—Ä–∞–¥–µ–Ω–æ —É –≤–∞—Å: ${ utils.prettify(user.stolenFromUser) } ‚ÇΩ
–£–∫—Ä–∞–ª–∏ –≤—ã: ${ utils.prettify(user.stolenByUser) } ‚ÇΩ`, user.balanceForWithdrawal && !user.protection ? {
    keyboard: Keyboard.builder()
    .textButton({
        label: 'üìù–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥',
        color: Keyboard.POSITIVE_COLOR
    })
    .row()
    .textButton({
        label: 'üîí–ó–∞—â–∏—Ç–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞',
        color: Keyboard.POSITIVE_COLOR
    })
    .inline()
} : {
    keyboard: Keyboard.builder()
    .textButton({
        label: 'üìù–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥',
        color: Keyboard.POSITIVE_COLOR
    })
    .inline()
});
}

module.exports = profile;